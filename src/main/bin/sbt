#!/bin/sh
#
# Fichier 'sbt'
#
# -------------------------------------------------------------------------------------------------------
# Description :
# -------------
#       Script init.d permettant de lancer le serveur "sbt"
#
# -------------------------------------------------------------------------------------------------------
# Usage :
# -------
#       service sbt {start|stop|restart|status}
#
# -------------------------------------------------------------------------------------------------------
# Historique :
# ------------
#       2015/11/23 - BAPPR - Version initiale
#
# -------------------------------------------------------------------------------------------------------

# Source function library.
. /etc/init.d/functions

# Compte systeme a utiliser
USER="sbt"
# Repertoire principal
HOME="/home/sbt"
# Applicatif
APP="fr.bappr.sbt.Application"
# Configuration de l'applicatif
OPTS="$OPTS -Xms512m -Xmx1024m"
SPRING_CONFIG_LOCATION="${HOME}/config/application.yml"
# Fichier de log (sortie standard)
LOG="${HOME}/logs/stdout.log"
# Classpath
CLASSPATH="." && for i in `ls ${HOME}/lib/*.jar`; do CLASSPATH=${CLASSPATH}:${i}; done;
export SPRING_CONFIG_LOCATION CLASSPATH

# Statut de l'application
check_status() {
    # Recuperation du PID de l'application
    s=`ps aux | grep "java ${APP}" | grep -v grep | awk '{print $2}'`
    if [ $s ] ; then
        echo "$s"
        return $s;
    fi

    # L'applicatif ne tourne pas. On renvoie un PID = 0
    echo "0"
    return 0;
}

# Lancement de l'application
start() {
    # Un PID different de 0 signifie que l'application tourne deja.
    pid=$( check_status )
    if [ $pid -ne 0 ] ; then
        echo "The application is already started ($pid)"
        exit 1
    fi

    # L'application ne tourne pas. On la lance
    echo -n "Starting application: "
    java ${APP} ${OPTS} >> ${LOG} 2>&1 &
    echo "OK"
}

# Arret de l'application
stop() {
    # Un PID egal a 0 signifie que l'application ne tourne pas
    pid=$( check_status )
    if [ $pid -eq 0 ] ; then
        echo "Application is already stopped"
        exit 1
    fi

    # Kill l'application a partir de son PID
    echo -n "Stopping application: "
    kill -9 $pid &
    echo "OK"
}

# Verifier le statut de l'application
status() {
    # Un PID different de 0 signifie que l'application tourne.
    pid=$( check_status )
    if [ $pid -ne 0 ] ; then
        echo "Application is started ($pid)"
    else
        echo "Application is stopped"
    fi
}

# Methode principale
case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    restart)
        stop
        start
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1
esac

exit 0
